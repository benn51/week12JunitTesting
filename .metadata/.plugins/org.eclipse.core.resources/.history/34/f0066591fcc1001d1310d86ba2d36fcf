import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.jupiter.api.Assertions.*;

import java.util.stream.Stream;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
class TestDemoTest {

	@BeforeEach
	void setUp() throws Exception {
	}

	@ParameterizedTest
	void assertThatTwoPositiveNumbersAreAddedCorrectly() {
	
		int	a;
		int	b;
		int	expected;
		Boolean	expectException;

		if(!expectException) {
			  assertThat(testDemo.addPositive(a, b)).isEqualTo(expected);
			}

		else {
			assertThatThrownBy(() -> 
		    testDemo.addPositive(a, b))
		        .isInstanceOf(IllegalArgumentException.class);

		}
		
		//fail("Not yet implemented");
	}

private static Stream <Object>argumentsForAddPositive() {
	return Stream.of(
			arguments(2,4,6,false),
			arguments(3,5,8,false),
			arguments(1,-1,0,true),
			arguments(2,-1,1,false),
			
			);
}
	
	private TestDemo testDemo= new TestDemo();
}
